#!/usr/bin/env node

/**
 * Script para configurar una base de datos completamente nueva
 * Este script automatiza todo el proceso de setup
 */

const { execSync } = require('child_process');
const { resetDatabase } = require('./reset-database');

async function setupFreshDatabase() {
    console.log('üöÄ SETUP DE BASE DE DATOS LIMPIA - BRYMAR');
    console.log('==========================================\n');

    try {
        // Paso 1: Verificar configuraci√≥n
        console.log('üìã Paso 1: Verificando configuraci√≥n...');
        try {
            execSync('node scripts/check-db-config.js', { stdio: 'inherit' });
        } catch (error) {
            console.error('‚ùå Error en la configuraci√≥n. Revisa las variables de entorno.');
            process.exit(1);
        }

        console.log('\n‚úÖ Configuraci√≥n verificada\n');

        // Paso 2: Limpiar base de datos
        console.log('üóëÔ∏è  Paso 2: Limpiando base de datos existente...');
        await resetDatabase();
        console.log('‚úÖ Base de datos limpiada\n');

        // Paso 3: Aplicar nuevo schema
        console.log('üìä Paso 3: Aplicando nuevo schema...');
        try {
            execSync('npm run db:push', { stdio: 'inherit' });
            console.log('‚úÖ Schema aplicado exitosamente\n');
        } catch (error) {
            console.error('‚ùå Error aplicando schema:', error.message);
            throw error;
        }

        // Paso 4: Seed inicial (opcional)
        console.log('üå± Paso 4: Aplicando datos iniciales...');
        try {
            execSync('npm run db:seed', { stdio: 'inherit' });
            console.log('‚úÖ Datos iniciales aplicados\n');
        } catch (error) {
            console.log('‚ö†Ô∏è  Advertencia: Error aplicando seed (esto es opcional)');
            console.log('   Puedes ejecutar manualmente: npm run db:seed\n');
        }

        // Paso 5: Verificaci√≥n final
        console.log('üîç Paso 5: Verificaci√≥n final...');
        console.log('‚úÖ Setup completado exitosamente!\n');

        console.log('üéâ ¬°BASE DE DATOS LISTA!');
        console.log('========================\n');
        console.log('üìã Resumen:');
        console.log('   ‚úÖ Base de datos limpiada');
        console.log('   ‚úÖ Nuevo schema aplicado');
        console.log('   ‚úÖ Datos iniciales cargados');
        console.log('   ‚úÖ Configuraci√≥n verificada\n');

        console.log('üöÄ Pr√≥ximos pasos:');
        console.log('   1. Ejecutar: npm run dev');
        console.log('   2. Probar autenticaci√≥n (sign up/sign in)');
        console.log('   3. Verificar que las propiedades se muestren correctamente\n');

        console.log('üìö Documentaci√≥n:');
        console.log('   - Configuraci√≥n DB: docs/DATABASE_CONFIGURATION.md');
        console.log('   - Troubleshooting: docs/TROUBLESHOOTING_AUTH.md\n');

    } catch (error) {
        console.error('\n‚ùå Error durante el setup:');
        console.error(error.message);

        console.log('\nüîß Pasos de recuperaci√≥n:');
        console.log('   1. Verificar variables de entorno: npm run db:check');
        console.log('   2. Limpiar manualmente: npm run db:reset --force');
        console.log('   3. Aplicar schema: npm run db:push');
        console.log('   4. Aplicar seed: npm run db:seed\n');

        process.exit(1);
    }
}

// Funci√≥n principal
async function main() {
    const args = process.argv.slice(2);
    const isForced = args.includes('--force');

    if (!isForced) {
        console.log('‚ö†Ô∏è  ADVERTENCIA: Este script eliminar√° TODOS los datos existentes');
        console.log('   Para continuar, ejecuta: node scripts/setup-fresh-database.js --force\n');
        return;
    }

    await setupFreshDatabase();
}

// Ejecutar solo si es llamado directamente
if (require.main === module) {
    main().catch(console.error);
}

module.exports = { setupFreshDatabase };